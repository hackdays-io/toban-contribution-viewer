default_stages: [commit]

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    # -   id: trailing-whitespace  # Removed as it causes too many issues
    -   id: end-of-file-fixer
        exclude: ^backend/docs/
    -   id: check-yaml
    -   id: check-json
    -   id: check-added-large-files
    -   id: check-ast
    -   id: check-merge-conflict
    -   id: debug-statements
    -   id: detect-private-key
    # Removed double-quote-string-fixer as it conflicts with Black's formatting
    # Removed name-tests-test as CI will handle this

# Black formatter for backend
-   repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
    -   id: black
        language_version: python3
        files: ^backend/
        types: [python]

# isort for backend
-   repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
    -   id: isort
        files: ^backend/
        types: [python]
        args: ["--profile=black"]

# TypeScript linting and formatting
-   repo: local
    hooks:
    -   id: typescript-check
        name: TypeScript Check
        entry: bash -c 'cd frontend && npm run typecheck || (echo "TypeScript check failed. Run npm run typecheck in frontend directory for details." && exit 1)'
        language: system
        files: ^frontend/.*\.(ts|tsx)$
        pass_filenames: false
        
    -   id: eslint
        name: ESLint
        entry: bash -c 'cd frontend && npm run lint || (echo "ESLint check failed. Run npm run lint in frontend directory for details." && exit 1)'
        language: system
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        pass_filenames: false
        
    -   id: prettier
        name: Prettier Format Check
        entry: bash -c 'cd frontend && npm run format:check || (echo "Prettier format check failed. Run npm run format in frontend directory to fix issues." && exit 1)'
        language: system
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|scss|md)$
        pass_filenames: false

    -   id: check-vite-config
        name: Check Vite Config
        entry: frontend/scripts/check-vite-config.sh
        language: system
        files: ^frontend/vite\.config\.ts$
        pass_filenames: false

# The following checks are disabled for local development but run in CI
# Commented out since CI will handle these checks
#
# # flake8
# -   repo: https://github.com/pycqa/flake8
#     rev: 7.0.0
#     hooks:
#     -   id: flake8
#         files: ^backend/
#         types: [python]
#         additional_dependencies:
#         -   flake8-bugbear
#         -   flake8-comprehensions
#         -   flake8-docstrings
#         -   flake8-simplify
#         args: [
#             '--max-complexity=10',
#             '--max-line-length=120',
#             '--ignore=E203,W503,D100,D104,D107',  # E203, W503: conflict with black, D100, D104, D107: docstring in public module/package/init
#             '--exclude=alembic/*,venv/*,__pycache__/*'
#         ]
#
# # mypy
# -   repo: https://github.com/pre-commit/mirrors-mypy
#     rev: v1.8.0
#     hooks:
#     -   id: mypy
#         files: ^backend/
#         exclude: ^backend/(alembic/|tests/|venv/)
#         additional_dependencies:
#         -   pydantic
#         -   types-requests
#         -   sqlalchemy-stubs
#         args: ['--ignore-missing-imports', '--disallow-untyped-defs', '--disallow-incomplete-defs', '--check-untyped-defs']
#
# # bandit (security linter)
# -   repo: https://github.com/PyCQA/bandit
#     rev: 1.7.8
#     hooks:
#     -   id: bandit
#         files: ^backend/
#         exclude: ^backend/(tests/|venv/)
#         args: ['--skip=B101,B311', '--recursive']