"""create_all_tables

Revision ID: ea5ebf7c670a
Revises: 
Create Date: 2025-04-24 10:18:39.029725

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea5ebf7c670a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('team',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=1024), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=False),
    sa.Column('is_personal', sa.Boolean(), nullable=False),
    sa.Column('team_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by_user_id', sa.String(length=255), nullable=False),
    sa.Column('created_by_email', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_id'), 'team', ['id'], unique=False)
    op.create_index(op.f('ix_team_slug'), 'team', ['slug'], unique=False)
    op.create_index('ix_team_slug_unique', 'team', ['slug'], unique=True)
    op.create_table('crossresourcereport',
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='reportstatus'), nullable=False),
    sa.Column('date_range_start', sa.DateTime(), nullable=False),
    sa.Column('date_range_end', sa.DateTime(), nullable=False),
    sa.Column('report_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('comprehensive_analysis', sa.Text(), nullable=True),
    sa.Column('comprehensive_analysis_generated_at', sa.DateTime(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_cross_resource_report_team_id_status', 'crossresourcereport', ['team_id', 'status'], unique=False)
    op.create_index(op.f('ix_crossresourcereport_id'), 'crossresourcereport', ['id'], unique=False)
    op.create_index(op.f('ix_crossresourcereport_status'), 'crossresourcereport', ['status'], unique=False)
    op.create_index(op.f('ix_crossresourcereport_team_id'), 'crossresourcereport', ['team_id'], unique=False)
    op.create_table('integration',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('service_type', sa.Enum('SLACK', 'GITHUB', 'NOTION', 'DISCORD', name='integrationtype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'DISCONNECTED', 'EXPIRED', 'REVOKED', 'ERROR', name='integrationstatus'), nullable=False),
    sa.Column('integration_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('workspace_id', sa.String(length=255), nullable=True),
    sa.Column('owner_team_id', sa.UUID(), nullable=False),
    sa.Column('created_by_user_id', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['owner_team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integration_id'), 'integration', ['id'], unique=False)
    op.create_index(op.f('ix_integration_owner_team_id'), 'integration', ['owner_team_id'], unique=False)
    op.create_index('ix_integration_owner_team_id_workspace_id_service_type', 'integration', ['owner_team_id', 'workspace_id', 'service_type'], unique=True, postgresql_where=sa.text('workspace_id IS NOT NULL'))
    op.create_table('slackworkspace',
    sa.Column('slack_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('icon_url', sa.String(length=1024), nullable=True),
    sa.Column('team_size', sa.Integer(), nullable=True),
    sa.Column('workspace_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_connected', sa.Boolean(), nullable=False),
    sa.Column('connection_status', sa.String(length=50), nullable=False),
    sa.Column('last_connected_at', sa.DateTime(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('access_token', sa.String(length=1024), nullable=True),
    sa.Column('refresh_token', sa.String(length=1024), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slackworkspace_id'), 'slackworkspace', ['id'], unique=False)
    op.create_index(op.f('ix_slackworkspace_slack_id'), 'slackworkspace', ['slack_id'], unique=True)
    op.create_index(op.f('ix_slackworkspace_team_id'), 'slackworkspace', ['team_id'], unique=False)
    
    # Legacy slackanalysis table removed
    op.create_table('teammember',
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MEMBER', 'VIEWER', name='teammemberrole'), nullable=False),
    sa.Column('invitation_status', sa.String(length=50), nullable=False),
    sa.Column('invitation_token', sa.String(length=255), nullable=True),
    sa.Column('invitation_expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teammember_id'), 'teammember', ['id'], unique=False)
    op.create_index(op.f('ix_teammember_team_id'), 'teammember', ['team_id'], unique=False)
    op.create_index('ix_teammember_team_id_user_id', 'teammember', ['team_id', 'user_id'], unique=True)
    op.create_index(op.f('ix_teammember_user_id'), 'teammember', ['user_id'], unique=False)
    op.create_table('integration_share',
    sa.Column('share_level', sa.Enum('FULL_ACCESS', 'LIMITED_ACCESS', 'READ_ONLY', name='sharelevel'), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('shared_by_user_id', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integration_share_id'), 'integration_share', ['id'], unique=False)
    op.create_index(op.f('ix_integration_share_integration_id'), 'integration_share', ['integration_id'], unique=False)
    op.create_index('ix_integration_share_integration_id_team_id', 'integration_share', ['integration_id', 'team_id'], unique=True)
    op.create_index(op.f('ix_integration_share_team_id'), 'integration_share', ['team_id'], unique=False)
    op.create_table('integrationcredential',
    sa.Column('credential_type', sa.Enum('OAUTH_TOKEN', 'PERSONAL_TOKEN', 'API_KEY', 'APP_TOKEN', name='credentialtype'), nullable=False),
    sa.Column('encrypted_value', sa.String(length=2048), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('refresh_token', sa.String(length=2048), nullable=True),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integrationcredential_id'), 'integrationcredential', ['id'], unique=False)
    op.create_index(op.f('ix_integrationcredential_integration_id'), 'integrationcredential', ['integration_id'], unique=False)
    op.create_table('integrationevent',
    sa.Column('event_type', sa.Enum('CREATED', 'SHARED', 'UNSHARED', 'UPDATED', 'DISCONNECTED', 'ACCESS_CHANGED', 'ERROR', name='eventtype'), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('actor_user_id', sa.String(length=255), nullable=False),
    sa.Column('affected_team_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['affected_team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integrationevent_affected_team_id'), 'integrationevent', ['affected_team_id'], unique=False)
    op.create_index(op.f('ix_integrationevent_id'), 'integrationevent', ['id'], unique=False)
    op.create_index(op.f('ix_integrationevent_integration_id'), 'integrationevent', ['integration_id'], unique=False)
    op.create_table('resourceanalysis',
    sa.Column('cross_resource_report_id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.Enum('SLACK_CHANNEL', 'GITHUB_REPO', 'NOTION_PAGE', name='analysisresourcetype'), nullable=False),
    sa.Column('analysis_type', sa.Enum('CONTRIBUTION', 'TOPICS', 'SENTIMENT', 'ACTIVITY', name='analysistype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='reportstatus'), nullable=False),
    sa.Column('analysis_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('results', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('contributor_insights', sa.Text(), nullable=True),
    sa.Column('topic_analysis', sa.Text(), nullable=True),
    sa.Column('resource_summary', sa.Text(), nullable=True),
    sa.Column('key_highlights', sa.Text(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('analysis_generated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cross_resource_report_id'], ['crossresourcereport.id'], ),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_resource_analysis_report_id_status', 'resourceanalysis', ['cross_resource_report_id', 'status'], unique=False)
    op.create_index('ix_resource_analysis_resource_type', 'resourceanalysis', ['resource_type'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_analysis_type'), 'resourceanalysis', ['analysis_type'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_cross_resource_report_id'), 'resourceanalysis', ['cross_resource_report_id'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_id'), 'resourceanalysis', ['id'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_integration_id'), 'resourceanalysis', ['integration_id'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_resource_type'), 'resourceanalysis', ['resource_type'], unique=False)
    op.create_index(op.f('ix_resourceanalysis_status'), 'resourceanalysis', ['status'], unique=False)
    op.create_table('serviceresource',
    sa.Column('resource_type', sa.Enum('SLACK_CHANNEL', 'SLACK_USER', 'SLACK_EMOJI', 'GITHUB_REPOSITORY', 'GITHUB_ISSUE', 'GITHUB_PR', 'GITHUB_WEBHOOK', 'NOTION_PAGE', 'NOTION_DATABASE', 'NOTION_BLOCK', 'DISCORD_GUILD', 'DISCORD_CHANNEL', name='resourcetype'), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('resource_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['integration_id'], ['integration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_serviceresource_id'), 'serviceresource', ['id'], unique=False)
    op.create_index(op.f('ix_serviceresource_integration_id'), 'serviceresource', ['integration_id'], unique=False)
    op.create_index('ix_serviceresource_integration_id_resource_type_external_id', 'serviceresource', ['integration_id', 'resource_type', 'external_id'], unique=True)
    op.create_table('slackchannel',
    sa.Column('slack_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('purpose', sa.String(length=1024), nullable=True),
    sa.Column('topic', sa.String(length=1024), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at_ts', sa.String(length=50), nullable=True),
    sa.Column('has_bot', sa.Boolean(), nullable=False),
    sa.Column('bot_joined_at', sa.DateTime(), nullable=True),
    sa.Column('is_selected_for_analysis', sa.Boolean(), nullable=False),
    sa.Column('is_supported', sa.Boolean(), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('oldest_synced_ts', sa.String(length=50), nullable=True),
    sa.Column('latest_synced_ts', sa.String(length=50), nullable=True),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['slackworkspace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slackchannel_id'), 'slackchannel', ['id'], unique=False)
    op.create_index(op.f('ix_slackchannel_slack_id'), 'slackchannel', ['slack_id'], unique=False)
    op.create_index('ix_slackchannel_workspace_id_slack_id', 'slackchannel', ['workspace_id', 'slack_id'], unique=True)
    op.create_table('slackuser',
    sa.Column('slack_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('real_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=100), nullable=True),
    sa.Column('timezone_offset', sa.Integer(), nullable=True),
    sa.Column('profile_image_url', sa.String(length=1024), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('profile_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['slackworkspace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slackuser_id'), 'slackuser', ['id'], unique=False)
    op.create_index(op.f('ix_slackuser_slack_id'), 'slackuser', ['slack_id'], unique=False)
    op.create_index('ix_slackuser_workspace_id_slack_id', 'slackuser', ['workspace_id', 'slack_id'], unique=True)
    # Legacy analysis_channels table removed
    op.create_table('resourceaccess',
    sa.Column('access_level', sa.Enum('READ', 'WRITE', 'ADMIN', name='accesslevel'), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('granted_by_user_id', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['serviceresource.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resourceaccess_id'), 'resourceaccess', ['id'], unique=False)
    op.create_index(op.f('ix_resourceaccess_resource_id'), 'resourceaccess', ['resource_id'], unique=False)
    op.create_index('ix_resourceaccess_resource_id_team_id', 'resourceaccess', ['resource_id', 'team_id'], unique=True)
    op.create_index(op.f('ix_resourceaccess_team_id'), 'resourceaccess', ['team_id'], unique=False)
    # Legacy slackchannelanalysis table removed
    # Legacy slackcontribution table removed
    op.create_table('slackmessage',
    sa.Column('slack_id', sa.String(length=255), nullable=False),
    sa.Column('slack_ts', sa.String(length=50), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('processed_text', sa.Text(), nullable=True),
    sa.Column('message_type', sa.String(length=50), nullable=False),
    sa.Column('subtype', sa.String(length=50), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('edited_ts', sa.String(length=50), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=False),
    sa.Column('attachments', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('files', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('thread_ts', sa.String(length=50), nullable=True),
    sa.Column('is_thread_parent', sa.Boolean(), nullable=False),
    sa.Column('is_thread_reply', sa.Boolean(), nullable=False),
    sa.Column('reply_count', sa.Integer(), nullable=False),
    sa.Column('reply_users_count', sa.Integer(), nullable=False),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('message_datetime', sa.DateTime(), nullable=False),
    sa.Column('is_analyzed', sa.Boolean(), nullable=False),
    sa.Column('message_category', sa.String(length=100), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('analysis_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('channel_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['slackchannel.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['slackmessage.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['slackuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_slackmessage_channel_id_slack_ts', 'slackmessage', ['channel_id', 'slack_ts'], unique=False)
    op.create_index(op.f('ix_slackmessage_id'), 'slackmessage', ['id'], unique=False)
    op.create_index(op.f('ix_slackmessage_message_datetime'), 'slackmessage', ['message_datetime'], unique=False)
    op.create_index(op.f('ix_slackmessage_slack_id'), 'slackmessage', ['slack_id'], unique=False)
    op.create_index(op.f('ix_slackmessage_slack_ts'), 'slackmessage', ['slack_ts'], unique=False)
    op.create_index(op.f('ix_slackmessage_thread_ts'), 'slackmessage', ['thread_ts'], unique=False)
    op.create_index('ix_slackmessage_user_id_slack_ts', 'slackmessage', ['user_id', 'slack_ts'], unique=False)
    op.create_table('slackreaction',
    sa.Column('emoji_name', sa.String(length=255), nullable=False),
    sa.Column('emoji_code', sa.String(length=255), nullable=True),
    sa.Column('reaction_ts', sa.String(length=50), nullable=True),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['slackmessage.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['slackuser.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slackreaction_id'), 'slackreaction', ['id'], unique=False)
    op.create_index('ix_slackreaction_message_id_user_id_emoji_name', 'slackreaction', ['message_id', 'user_id', 'emoji_name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_slackreaction_message_id_user_id_emoji_name', table_name='slackreaction')
    op.drop_index(op.f('ix_slackreaction_id'), table_name='slackreaction')
    op.drop_table('slackreaction')
    op.drop_index('ix_slackmessage_user_id_slack_ts', table_name='slackmessage')
    op.drop_index(op.f('ix_slackmessage_thread_ts'), table_name='slackmessage')
    op.drop_index(op.f('ix_slackmessage_slack_ts'), table_name='slackmessage')
    op.drop_index(op.f('ix_slackmessage_slack_id'), table_name='slackmessage')
    op.drop_index(op.f('ix_slackmessage_message_datetime'), table_name='slackmessage')
    op.drop_index(op.f('ix_slackmessage_id'), table_name='slackmessage')
    op.drop_index('ix_slackmessage_channel_id_slack_ts', table_name='slackmessage')
    op.drop_table('slackmessage')
    # Legacy tables removed: slackcontribution, slackchannelanalysis, analysis_channels
    op.drop_index(op.f('ix_resourceaccess_team_id'), table_name='resourceaccess')
    op.drop_index('ix_resourceaccess_resource_id_team_id', table_name='resourceaccess')
    op.drop_index(op.f('ix_resourceaccess_resource_id'), table_name='resourceaccess')
    op.drop_index(op.f('ix_resourceaccess_id'), table_name='resourceaccess')
    op.drop_table('resourceaccess')
    op.drop_index('ix_slackuser_workspace_id_slack_id', table_name='slackuser')
    op.drop_index(op.f('ix_slackuser_slack_id'), table_name='slackuser')
    op.drop_index(op.f('ix_slackuser_id'), table_name='slackuser')
    op.drop_table('slackuser')
    op.drop_index('ix_slackchannel_workspace_id_slack_id', table_name='slackchannel')
    op.drop_index(op.f('ix_slackchannel_slack_id'), table_name='slackchannel')
    op.drop_index(op.f('ix_slackchannel_id'), table_name='slackchannel')
    op.drop_table('slackchannel')
    # Legacy slackanalysis table removed
    op.drop_index('ix_serviceresource_integration_id_resource_type_external_id', table_name='serviceresource')
    op.drop_index(op.f('ix_serviceresource_integration_id'), table_name='serviceresource')
    op.drop_index(op.f('ix_serviceresource_id'), table_name='serviceresource')
    op.drop_table('serviceresource')
    op.drop_index(op.f('ix_resourceanalysis_status'), table_name='resourceanalysis')
    op.drop_index(op.f('ix_resourceanalysis_resource_type'), table_name='resourceanalysis')
    op.drop_index(op.f('ix_resourceanalysis_integration_id'), table_name='resourceanalysis')
    op.drop_index(op.f('ix_resourceanalysis_id'), table_name='resourceanalysis')
    op.drop_index(op.f('ix_resourceanalysis_cross_resource_report_id'), table_name='resourceanalysis')
    op.drop_index(op.f('ix_resourceanalysis_analysis_type'), table_name='resourceanalysis')
    op.drop_index('ix_resource_analysis_resource_type', table_name='resourceanalysis')
    op.drop_index('ix_resource_analysis_report_id_status', table_name='resourceanalysis')
    op.drop_table('resourceanalysis')
    op.drop_index(op.f('ix_integrationevent_integration_id'), table_name='integrationevent')
    op.drop_index(op.f('ix_integrationevent_id'), table_name='integrationevent')
    op.drop_index(op.f('ix_integrationevent_affected_team_id'), table_name='integrationevent')
    op.drop_table('integrationevent')
    op.drop_index(op.f('ix_integrationcredential_integration_id'), table_name='integrationcredential')
    op.drop_index(op.f('ix_integrationcredential_id'), table_name='integrationcredential')
    op.drop_table('integrationcredential')
    op.drop_index(op.f('ix_integration_share_team_id'), table_name='integration_share')
    op.drop_index('ix_integration_share_integration_id_team_id', table_name='integration_share')
    op.drop_index(op.f('ix_integration_share_integration_id'), table_name='integration_share')
    op.drop_index(op.f('ix_integration_share_id'), table_name='integration_share')
    op.drop_table('integration_share')
    op.drop_index(op.f('ix_teammember_user_id'), table_name='teammember')
    op.drop_index('ix_teammember_team_id_user_id', table_name='teammember')
    op.drop_index(op.f('ix_teammember_team_id'), table_name='teammember')
    op.drop_index(op.f('ix_teammember_id'), table_name='teammember')
    op.drop_table('teammember')
    op.drop_index(op.f('ix_slackworkspace_team_id'), table_name='slackworkspace')
    op.drop_index(op.f('ix_slackworkspace_slack_id'), table_name='slackworkspace')
    op.drop_index(op.f('ix_slackworkspace_id'), table_name='slackworkspace')
    op.drop_table('slackworkspace')
    op.drop_index('ix_integration_owner_team_id_workspace_id_service_type', table_name='integration', postgresql_where=sa.text('workspace_id IS NOT NULL'))
    op.drop_index(op.f('ix_integration_owner_team_id'), table_name='integration')
    op.drop_index(op.f('ix_integration_id'), table_name='integration')
    op.drop_table('integration')
    op.drop_index(op.f('ix_crossresourcereport_team_id'), table_name='crossresourcereport')
    op.drop_index(op.f('ix_crossresourcereport_status'), table_name='crossresourcereport')
    op.drop_index(op.f('ix_crossresourcereport_id'), table_name='crossresourcereport')
    op.drop_index('ix_cross_resource_report_team_id_status', table_name='crossresourcereport')
    op.drop_table('crossresourcereport')
    op.drop_index('ix_team_slug_unique', table_name='team')
    op.drop_index(op.f('ix_team_slug'), table_name='team')
    op.drop_index(op.f('ix_team_id'), table_name='team')
    op.drop_table('team')
    # ### end Alembic commands ###
